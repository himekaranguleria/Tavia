<div class="fieldset-wrapper customer-information">
    <style type="text/css">

        .vis-time-axis .vis-grid.vis-odd {
            background: #f5f5f5;
        }

        .vis-item.success {
            background-color: greenyellow;
            border-color: green;
        }

        /* create a custom sized dot at the bottom of the red item */
        .vis-item.missed {
            background-color: red;
            border-color: darkred;
            color: white;
        }

        .vis-item.pending {
            background-color: gold;
            border-color: orange;
        }
        .vis-item.vis-selected.pending {
            /* custom colors for selected orange items */
            background-color: orange;
            border-color: orangered;
        }

        .vis-item.running {
            background-color: magenta;
            border-color: purple;
            color: white;
        }

        /* our custom classes overrule the styles for selected events,
           so lets define a new style for the selected events */
        .vis-item.vis-selected {
            background-color: white;
            border-color: black;
            color: black;
            box-shadow: 0 0 10px gray;
        }
    </style>

    <div id="visualization"></div>

    <script type="text/javascript">
        (function () {
            require.config({
                paths: {
                    vis: 'Shockwavemk_CronSchedule/js/vis.min'
                }
            });
        })();

        require(['vis','jquery'], function (vis,$) {

            $(document).ready(function () {
                var container = document.getElementById('visualization');
                var cronjobs;

                var customDate = new Date();
                var options = {
                    showCurrentTime: true
                };

                var items = new vis.DataSet(<?php echo json_encode($this->getCronjobData()); ?>);
                var groups = new vis.DataSet(<?php echo json_encode($this->getCronjobGroups()); ?>);

                var timeline = new vis.Timeline(container);
                timeline.setOptions(options);
                timeline.setGroups(groups);
                timeline.setItems(items);

                var start = new Date((new Date()).getTime() - 10 * 60 * 1000);
                var end   = new Date((new Date()).getTime() + 10 * 60 * 1000);
                timeline.setWindow(start, end, {animation: false});

                var myInterval = setInterval(function () {

                    var url = '<?php echo $this->getUrl('cronschedule/ajax/cronjobs'); ?>';

                    $.ajax({
                        url: url,
                        type: "POST",
                        dataType: "json",
                        data: {
                            isAjax: 'true',
                            form_key: '<?php echo $this->getFormKey(); ?>'
                        },
                        async: true,
                        global: false,
                        "throws": true
                    }).done(function( data ) {

                        cronjobs = data.cronjobs;
                        timeline.setItems(cronjobs);

                    });

                },20000);
            });
        });
    </script>
</div>
